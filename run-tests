#!/bin/bash

# If you modify the behaviour of this file please remember to update the
# relevant wiki page:
#
# https://github.com/links-lang/links/wiki/Running-the-test-suite

# Control sequences used to display text in red
STARTCOLOR="\e[31m";
ENDCOLOR="\e[0m";

ret=0

if [[ $1 != "db-only" ]]; then
    for i in tests/*.tests; do
        cmnd="./test-harness $i"
        echo cmnd=$cmnd
        eval $cmnd
        ret_code=$?
        if [ $ret_code != 0 ]; then
            ret=1
        fi
    done
fi

if [[ $1 != "no-db" ]]; then
    if [[ ! -e tests/database/config ]]; then
      echo -en "$STARTCOLOR"
      echo -e  "Creating default database configuration tests/database/config"
      echo -e  "from tests/database/config.sample"
      echo -e  "Please customize to match your local database setup."
      echo -en "$ENDCOLOR"
      cp tests/database/config.sample tests/database/config
    fi

    user_string=""
    user=`grep database_args tests/database/config \
          | sed 's/database_args=[^:]*:[^:]*:\([^:]*\):.*/\1/'`
    if [ "$user" != "" ]; then
        user_string="-U $user"
    fi

    for s in tests/database/*.sql; do
        cmnd="psql -v $user_string ON_ERROR_STOP=1 -q -d links -f $s"
        echo cmnd=$cmnd
        eval $cmnd
        ret_code=$?
        if [ $ret_code != 0 ]; then
            echo -e "$STARTCOLOR\rFAILED DATABASE PREPARATION $s$ENDCOLOR"
            ret=1
        fi
    done

    for t in tests/database/*.links; do
        cmnd="./links --config=tests/database/config $t"
        echo cmnd=$cmnd
        eval $cmnd
        ret_code=$?
        if [ $ret_code != 0 ]; then
            echo -e "$STARTCOLOR\rFAILED TEST $t$ENDCOLOR"
            ret=1
        fi
    done
fi

if [ "$1" == "shredding" -o "$2" == "shredding" ]; then
    if [[ ! -e tests/shredding/config ]]; then
      echo -en "$STARTCOLOR"
      echo -e  "Creating default shredding configuration tests/shredding/config"
      echo -e  "from tests/shredding/config.sample"
      echo -e  "Please customize to match your local database setup."
      echo -en "$ENDCOLOR"
      cp tests/shredding/config.sample tests/shredding/config
    fi

    user_string=""
    user=`grep database_args tests/shredding/config \
          | sed 's/database_args=[^:]*:[^:]*:\([^:]*\):.*/\1/'`
    if [ "$user" != "" ]; then
        user_string="-U $user"
    fi

    for s in tests/shredding/*.sql; do
        cmnd="psql -v $user_string ON_ERROR_STOP=1 -q -d links -f $s"
        echo cmnd=$cmnd
        eval $cmnd
        ret_code=$?
        if [ $ret_code != 0 ]; then
            echo "FAILED DATABASE PREPARATION $s"
            ret=1
        fi
    done

    for t in tests/shredding/*.links; do
        cmnd="./links --config=tests/shredding/config $t"
        echo cmnd=$cmnd
        eval $cmnd
        ret_code=$?
        if [ $ret_code != 0 ]; then
            echo "FAILED TEST $t"
            ret=1
        fi
    done
fi

exit $ret

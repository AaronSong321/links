# Installing Links

Links requires OCaml 4.04.0. We strongly recommend installing using
the OPAM tool.

If you wish to use Links' database functionality, use your system's package
manager to install postgresql, the supported DBMS.

You can then install Links simply by issuing the command:

  $ opam install postgresql links

# Running Links.

Beginning with the Gorgie release, Links supports two methods of running
applications: either via the standalone application server, or via the CGI
interpreter used in previous releases.

## Application Server

To invoke a Links application using the application server, use a command
similar to the following:

  links --config=config -m
  --path=examples:examples/games:examples/dictionary
  examples/webserver/examples.links

(This program provides an application server for a number of example
programs.)

* The --config flag sets the location of the config file to the file "config"
* The -m flag enables support for Links' module system, new in Gorgie.
* The --path flag says that files can be found in the following directories:
  - examples
  - examples/games
  - examples/dictionary
* Finally examples/webserver/examples.links is the file to run, which imports
  the example modules and sets up the application server.

But first you need to do a few things.

  1) The config file needs to have an appropriate jsliburl and database
configuration arguments:

  jsliburl=/lib/
  database_driver=postgresql
  database_args=:5432:fred:

  2) The database user fred should exist. With postgres, perhaps the easiest
  way I to do this is to tie fred to the unix username and then no
  authentication is required.

  3) Create appropriate databases. We have some scripts to populate tables for
  some of the examples, but not all of them. We also don't have the actual
  data.

You should also be able to run

  links --config=config -m --path=examples:examples/games
    examples/webserver/examples-nodb.links

without needing to install a database. (This version just displays the
source code for examples that use the database.)

The default port is 8080, so having run either of the above examples
you should be able to access them by pointing your browser at:

  http://localhost:8080/examples/

Some (outdated) documentation can be built by running the Makefile in
the doc directory.

Some very incomplete but more up-to-date documentation is available on
the links wiki:

  https://github.com/links-lang/links/wiki

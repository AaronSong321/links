typename Calc = [&|Add:?\/Int.?\/Int.!/\Int.EndBang, Mul:?\/Int.?\/Int.!/\Int.EndBang|&];

sig calc : (Calc) ~> EndBang
fun calc(s) {
  offer (s) {
    case Add(s) ->
      var (x,s) = receive s;
      var (y,s) = receive s;
      var s = send (up (down x + down y)) s;
      s
    case Mul(s) ->
      var (x,s) = receive s;
      var (y,s) = receive s;
      var s = send (up (down x * down y)) s;
      s
  }
}

sig user : (~Calc) ~> Int
fun user(s) {
  var (x, s) = receive (send (up 6) (send (up 7) (select Mul s)));
  wait(s);
  down(x)
}

<<<<<<< HEAD
user(fork(calc))
=======
fun main() {
  var c = fork (calc);
  user(c)
}

main()
>>>>>>> sessions

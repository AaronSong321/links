typename Calc = [&|Add:?Int.?Int.!Int.EndBang, Mul:?Int.?Int.!Int.EndBang|&];

sig calc : (Calc) ~> EndBang
fun calc(s) {
  offer (s) {
    case Add(s) ->
      var (x,s) = grab(s);
      var (y,s) = grab(s);
      var s = give(x+y,s);
      s
    case Mul(s) ->
      var (x,s) = grab(s);
      var (y,s) = grab(s);
      var s = give(x*y,s);
      s
  }
}

sig user : (~Calc) ~> Int
fun user(s) {
  var s = select Mul s;
  var (x, s) = grab(give(6,give(7,s)));
  wait(s);
  x
}

fun main() {
  var c = fork (calc);
  user(c)
}

main()

typename Calc = [&|Add:?Int.?Int.!Int.End, Mul:?Int.?Int.!Int.End|&];

sig calc : (Calc) ~> ()
fun calc(s) {
  offer (s) {
    case Add(s) ->
      var (x,s) = grab(s);
      var (y,s) = grab(s);
      var _ = give(x+y,s);
      ()
    case Mul(s) ->
      var (x,s) = grab(s);
      var (y,s) = grab(s);
      var _ = give(x*y,s);
      ()
  }
}

sig user : (~Calc) ~> Int
fun user(s) {
  var s = select Mul s;
  grab(give(6,give(7,s))).1
}

fun main() {
  var a = new ();
  var _ = spawn { calc(accept(a)) };
  user(request(a))
}

main()

typename Calc = [&|Add:?Int.?Int.!Int.End, Mul:?Int.?Int.!Int.End|&];

sig calc : (Calc) ~> ()
fun calc(s) {
  <| case s {
       Add: s(x).s(y).s[x+y].{()};
       Mul: s(x).s(y).s[x*y].{()}} |>
}

sig user : (~Calc) ~> Int
fun user(s) {
  <| Mul s.s[6].s[7].s(z).{z} |>
}

fun main() {
  <| nu s.({calc(s)}|{user(s)}) |>
}

main()

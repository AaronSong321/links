typename Calc = [&|Add:?/\Int.?/\Int.!/\Int.EndBang, Mul:?/\Int.?/\Int.!/\Int.EndBang|&];

# What to do about "distinguished return" channel?  Mention in quote type?

sig calc : Quote(Calc)
val calc =
  <| s.
     offer(s) {
       case Add -> s(x).x \/ xx.
                   s(y).y \/ yy.
                   s[sum].(sum /\ xx+yy | s[])
       case Mul -> s(x).x \/ xx.
                   s(y).y \/ yy.
                   s[product].(product /\ xx*yy | s[]) } |>

sig user : Quote(~Calc, /\Int)
val user =
  <| s, return. s[Mul].s[six].(up(six, 6) | s[seven].(seven /\ 7 | s(z).return[zz].(z<->zz | s().return[]))) |>;


run return <| nu s.({calc[s]}|{user[s, return]}) |>

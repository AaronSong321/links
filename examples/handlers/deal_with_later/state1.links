sig get : () {Get:s, Put:(s) {}-> ()}~> s
fun get() {do Get}

sig put : (s) {Get:s, Put:(s) {}-> ()}~> ()
fun put(s) {do Put(s)}

sig toggle : () {Get:Bool, Put:(Bool) {}-> ()}~> Bool
fun toggle() {
  var x = get();
  put(not(x));
  x
}

sig evalState :
  (() {Get:s, Put:(s) {}-> ()}~> a) {}~>
    (s) {}~> a
fun evalState(m) {
  handle(m) {
    case Return(x) -> fun (_) {x}
    case Get(k)    -> fun (s) {k(s)(s)}
    case Put(t, k) -> fun (s) {k(())(t)}
  }
}

sig logState :
  (() {Get:s, Put:(s) {}-> ()}~> a) {}~>
     (s) {}~> (a, [s])
fun logState(m) {
  handle(m) {
    case Return(x) -> fun (s) {(x, [s])}
    case Get(k)    -> fun (s) {k(s)(s)}
    case Put(t, k) -> fun (s) {var (x, ss) = k(())(t); (x, s::ss)}
  }
}

var x1 = evalState(toggle)(true);
var x2 = logState(toggle)(true);

fun knock(m) {
    forward handle(m) {
        case Knock(p,k) -> p ^^ k(" Who's there?")
	case Return(x)  -> x
    }
}

fun who(m) {
    forward handle(m) {
        case Its(p,k)  -> k(p ^^ ". " ^^ p ^^ ", who?")
	case Return(x) -> x
    }
}

fun me(m) {
    handle(m) {
    	case Me(p,k)   -> k(p ^^ ".")
        case Return(x) -> x
    }
}

fun knockknock() {
    do Knock("Knock! Knock!") ^^ "\n " ^^ do Its("Eff") ^^ "\n " ^^ do Me("Effect")
}

fun run() {
    me( fun() {
    	who( fun() {
	     knock(knockknock)
	})
    })
}

fun h0(m) {
    forward handle(m) {
      case Op0(p,k) -> k(())
      case Return(x) -> x + 10
      }
}

fun h1(m) {
    forward handle(m) {
    	      case Op1(p,k) -> k(())
	      case Return(x) -> x - 1
	      }
}

fun h2(m) {
    forward handle(m) {
    	    case Op2(p,k) -> k(())
	    case Return(x) -> x * 2
    }
}

fun run2() {
    h0 ( fun() {
       h1( fun() {
       	   h2(fun () {
	   	  do Op2(); do Op1(); do Op2(); do Op2(); 1
	    })
        })
    })
}
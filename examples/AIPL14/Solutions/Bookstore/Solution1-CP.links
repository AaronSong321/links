typename Shop  = mu a.[&|Add:?String.a, Checkout:?Int.?String.EndBang|&];


sig waitForClient : (Shop) ~> EndBang
fun waitForClient(s) {
  offer(s) {
    case Add(s) ->
      var (item, s) = receive(s);
      print("Book name received: " ^^ item);
      waitForClient(s)

    case Checkout(s) ->
      var (card, s)    = receive(s);
      print("Card number received: " ^^ intToString(card));
      var (address, s) = receive(s);
      print("Address received: " ^^ address);
      s
  }
}

sig orderBooks : (~Shop, !().EndBang) ~> EndBang
fun orderBooks(c, return) {
  <| Add c.c["Alice in Wonderland"].Add c.c["Scotland in XX century"].Checkout c.c[8753].c["Summerhall Square"].c().return[()].return[] |>
}

sig main : () ~> ()
fun main() {
 run (fun(return){<| nu s.({waitForClient(s)}|{orderBooks(s, return)}) |>})
}

main()

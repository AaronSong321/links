# helper functions for invoking Get and Put operations
sig get : () {Get:s|_}-> s
fun get() {do Get}

sig put : (s) {Put:(s) {}-> ()|_}-> ()
fun put(s) {do Put(s)}

# bit toggling example
sig toggle : () {Get:Bool, Put:(Bool) {}-> ()|_}-> Bool
fun toggle() {
  var x = get();
  put(not(x));
  x
}

sig evalState :
          (Comp ({Get:s,  Put:(s) {}-> ()|e}, a)) ->
    (s) -> Comp ({Get{_}, Put{_}         |e}, a)
open handler evalState(m)(s) {
  case Return(x) -> x
  case Get(k)    -> k(s)(s)
  case Put(t, k) -> k(())(t)
}

sig logState :
          (Comp ({Get:s,  Put:(s) {}-> ()|e}, a)) ->
    (s) -> Comp ({Get{_}, Put{_}         |e}, (a, [s]))
open handler logState(m)(s) {
  case Return(x) -> (x, [s])
  case Get(k)    -> k(s)(s)
  case Put(t, k) -> var (x, ss) = k(())(t);
                    (x, s::ss)
}

var x1 = evalState(toggle)(true)();
var x2 = logState(toggle)(true)();

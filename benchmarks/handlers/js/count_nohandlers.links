sig count : (Int) ~> Int
fun count(n) client {
  if (n == 0) n
  else count(n-1)
}


fun b(n) client {
  var t0 = clientTime();
  var r = count(n);
  var t1 = clientTime();
  ignore $ domSetPropertyFromRef(getNodeById("result"), "value", intToString(r));
  ignore $ domSetPropertyFromRef(getNodeById("elapsed"), "value", intToString(t1 - t0));
  domRemoveAttributeFromRef(getNodeById("run"), "disabled")
}

fun proc() client {
  var n = recv();
  b(n);
  proc()
}

fun start(worker, inputSize) client {
  var n = stringToInt(inputSize);
  ignore $ domSetPropertyFromRef(getNodeById("run"), "disabled", "disabled");
  ignore $ domSetPropertyFromRef(getNodeById("result"), "value", "");
  ignore $ domSetPropertyFromRef(getNodeById("elapsed"), "value", "");
  worker ! n
}

# Page
fun mainPage(_) {
  var p = spawnClient { proc() };
  page
    <html>
      <body>
        <form l:onsubmit="{start(p, inputSize)}">
          <table border="0" cellspacing="5">
            <tr>
              <td>Problem size:</td>
              <td><input type="text" l:name="inputSize" value="100000" /></td>
            </tr>
            <tr>
              <td>Result:</td>
              <td><input type="text" id="result" readonly="readonly" value="" /></td>
            </tr>
            <tr>
              <td>Elapsed:</td>
              <td><input type="text" id="elapsed" readonly="readonly" value="" /></td>
            </tr>
            <tr>
             <td colspan="2"><input type="submit" id="run" value="Run" /></td>
            </tr>
          </table>
        </form>
      </body>
    </html>
}


fun main() {
  addRoute("/", mainPage);
  servePages()
}

main()
